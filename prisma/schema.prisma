// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Users {
    id_user String @id @default(uuid())
    nombre_completo String
    num_cedula String
    telefono String
    role ROLE? @default(USER)

    bookings Bookings[]
    factura Factura?
    pay Pay?

    @@unique(name: "telefonoNumCedula", fields: [num_cedula, telefono])
    @@map("users")
}

model Bookings {
  id_booking String @id @default(uuid())
  status STATUS_BOOKING? @default(PENDING)
  fecha DateTime
  vehiculosRelation Vehiculo @relation(fields: [vehiculoId], references: [id_car])
  UserRelation Users @relation(fields: [userId], references: [id_user])
  vehiculoId String
  userId String
}

model Vehiculo {
  id_car String @id @default(uuid())
  marcasRelation Marca_Vehiculo @relation(fields: [marcaId], references: [id_marca])
  marcaId String
  AGE Int
  bookings Bookings[]
  factura Factura?
}

model Marca_Vehiculo {
  id_marca String @id @default(uuid())
  marca String
  vehiculos Vehiculo[]
}

model Factura {
id_factura String @id @default(uuid())
usuarioRelation Users @relation(fields: [userId], references: [id_user])
vehiculoRelation Vehiculo @relation(fields: [vehiculoId], references: [id_car])
userId String @unique
fecha DateTime
vehiculoId String @unique
subtotal Float
itb Float
total Float
pay Pay?


}

model Pay {

id_pay String @id @default(uuid())
facturaId String @unique
userId String @unique
status_pay PAY?
fecha DateTime
pagousuarioRelation Users @relation(fields: [userId], references: [id_user])
pagofacturaRelation Factura @relation(fields: [facturaId], references: [id_factura])

}

enum STATUS_BOOKING {
  PENDING
  SUCCESS
  DECLINE
}

enum ROLE {
  ADMIN
  USER
}

enum PAY {
PENDING
SUCCESS
PAY_PAYMENT
DECLINE
}

